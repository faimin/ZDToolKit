# Uncomment the next line to define a global platform for your project
platform :ios, '8.0'

target 'ZDToolKitDemo' do
  # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
  # use_frameworks!

  # Pods for ZDToolKitDemo
  pod 'SDWebImage'
  pod 'YYWebImage'
  pod 'libffi-core'
  pod 'ZDToolKit', :path => '../'
  

  target 'ZDToolKitDemoTests' do
    inherit! :search_paths
    # Pods for testing
  end

  target 'ZDToolKitDemoUITests' do
    inherit! :search_paths
    # Pods for testing
  end

end

#############################################################

install! 'cocoapods',
         :generate_multiple_pod_projects => true,
         :incremental_installation => true

############################################################

#https://github.com/CocoaPods/CocoaPods/issues/8604
post_install do |installer|
  installer.generated_pod_targets.each do |target|
        puts "targetname = ", target
        target.build_configurations.each do |config|
            if target.name != 'ZDToolKit'
                #block内直接引用全局变量的警告
                config.build_settings['CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF'] = 'NO'
                #关闭`This block declaration is not a prototype,Insert ‘void'`警告
                config.build_settings['CLANG_WARN_STRICT_PROTOTYPES'] = 'NO'
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '8.0'
            end
        end
    end
end


# https://www.jianshu.com/p/a1d2d148fdd3
def generate_modulemap(name, path)
  f = File.new(File.join("#{path}/module.modulemap"), "w+")
  module_name = "#{name}"
  while(module_name["+"])
      module_name["+"] = "_"
  end           
  f.puts("module XB#{module_name} {")
  f.puts("    umbrella header \"#{name}_umbrella.h\"")
  f.puts("    export *")
  f.puts("}")
end

def generate_umbrella(name, path) 
  f = File.new(File.join("#{path}/#{name}_umbrella.h"), "w+")
  f.puts("#import <Foundation/Foundation.h>")
  Dir.foreach(path) do |filename|
      if filename != "." and filename != ".."
          f.puts("#import \"#{filename}\"")
      end
  end
end
